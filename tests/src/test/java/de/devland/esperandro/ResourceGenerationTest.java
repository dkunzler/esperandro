/*
 * Copyright 2013 David Kunzler
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

package de.devland.esperandro;

import org.junit.Assert;
import org.junit.Test;

import java.io.File;
import java.nio.file.Files;

public class ResourceGenerationTest {

    private static final String EXPECTED_CONTENT =
            "" +
                    "<!--generated by esperandro-->\n" +
                    "<resources>\n" +
                    "    <string translatable=\"false\" name=\"stringPrefWithBooleanPutter\">stringPrefWithBooleanPutter</string>\n" +
                    "    <string translatable=\"false\" name=\"boolPref\">boolPref</string>\n" +
                    "    <string translatable=\"false\" name=\"longPref\">longPref</string>\n" +
                    "    <string translatable=\"false\" name=\"floatPref\">floatPref</string>\n" +
                    "    <string translatable=\"false\" name=\"integerPref\">integerPref</string>\n" +
                    "    <string translatable=\"false\" name=\"stringSetPref\">stringSetPref</string>\n" +
                    "    <string translatable=\"false\" name=\"stringPref\">stringPref</string>\n" +
                    "</resources>";


    @Test
    public void testResourceFileExists() {
        Assert.assertTrue(new File(targetDir(), "esperandroEsperandroSimpleExample.xml").exists());
        Assert.assertTrue(new File(targetDir(), "esperandroUnsafeExample.xml").exists());
        Assert.assertTrue(new File(targetDir(), "bar_EsperandroDefaultsExample.xml").exists());
    }

    @Test
    public void testContent() throws Exception {
        String content = String.join("\n",
                Files.readAllLines(new File(targetDir(), "esperandroEsperandroSimpleExample.xml").toPath()));

        Assert.assertEquals(EXPECTED_CONTENT, content);
    }

    @Test
    public void testStringPrefix() throws Exception {
        String content = String.join("\n",
                Files.readAllLines(new File(targetDir(), "esperandroUnsafeExample.xml").toPath()));

        Assert.assertTrue(content.contains("name=\"foo_simpleInt\""));
    }

    private File targetDir() {
        String relPath = getClass().getProtectionDomain().getCodeSource().getLocation().getFile();
        File targetDir = new File(relPath + "../../target");
        if (!targetDir.exists()) {
            targetDir.mkdir();
        }
        return targetDir;
    }
}
